07/09/2023
- Se crea proyecto
- Se configura grapjql
- se configura apolo server

#instalar librerias
yarn add
@nestjs/graphql 
@nestjs/apollo 
@apollo/server 
graphql

#app.module.ts
import { join } from 'path';
import { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';
import { Module } from '@nestjs/common';
import { GraphQLModule } from '@nestjs/graphql';
import { ApolloServerPluginLandingPageLocalDefault } from '@apollo/server/plugin/landingPage/default';

import { ItemsModule } from './items/items.module';

@Module({
  imports: [
    GraphQLModule.forRoot<ApolloDriverConfig>({
      driver: ApolloDriver,
      autoSchemaFile: join(process.cwd(), 'src/schema.gql'),
      // debug: false,
      playground: false,
      plugins: [ApolloServerPluginLandingPageLocalDefault()],
    }),
    ItemsModule,
  ],
  controllers: [],
  providers: [],
})
export class AppModule {}

- se crea recurso items
nest g res items --no-spec

-se crea archivo .env

-se crea archivo: docker-compose.yml

-se corre docker compose, para esto se debe levantar docker desktop
por primera vez
docker-compose up 

despues se puede correr 
docker-compose up -d

- se actualiza README.md

- se configura conexion a la base de datos en nestjs

